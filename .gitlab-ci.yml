variables:
  IMAGE: bankexlabs/$CI_PROJECT_NAME:release

stages:
  - build
  - release
  - deploy-stage

build-stage:
  image: node:alpine
  stage: build-stage
  before_script:
    - apk add --update git
    - apk --no-cache add g++ gcc libgcc libstdc++ linux-headers make python
    - npm config set user 0
    - npm config set unsafe-perm true
    - npm install --save-dev @angular/cli@latest
    - npm install --no-cache
  script:
    - ./node_modules/@angular/cli/bin/ng build --prod
  artifacts:
    paths:
      - dist
    expire_in: 1h

release-stage:
  image: docker:latest
  stage: release-stage
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_TOKEN
  script:
    - docker build -f docker/Dockerfile -t ${IMAGE} .
    - docker push ${IMAGE}

deploy-stage:
  stage: deploy-stage
  image: tmaier/docker-compose
  variables:
    DOCKER_HOST: "tcp://charity-staging.westeurope.cloudapp.azure.com:2376"
    DOCKER_TLS_VERIFY: "1"
    SERVERNAME: donatorscab.staging.bankex.team
    EMAIL: "om@bankexfoundation.org"
    DOCKER_CERT_PATH: "/certs"
  before_script:
    - mkdir -p $DOCKER_CERT_PATH
    - echo "$DOCKER_CA" > $DOCKER_CERT_PATH/ca.pem
    - echo "$DOCKER_CERT" > $DOCKER_CERT_PATH/cert.pem
    - echo "$DOCKER_KEY" > $DOCKER_CERT_PATH/key.pem
    - docker login -u $DOCKER_USER -p $DOCKER_TOKEN
    - echo "IMAGE=$IMAGE" > .env ; echo "VIRTUAL_HOST=$SERVERNAME" >> .env ; echo "LETSENCRYPT_HOST=$SERVERNAME" >> .env; echo "LETSENCRYPT_EMAIL=$EMAIL" >> .env
  script:
    - docker-compose -f docker/docker-compose.yml down
    - docker rmi $IMAGE || echo "image not exist"
    - docker pull $IMAGE
    - docker-compose -f docker/docker-compose.yml up -d
  environment:
    name: staging
    url: https://donatorscab.staging.bankex.team
  when: manual
